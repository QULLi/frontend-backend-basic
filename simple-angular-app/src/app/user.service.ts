import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

// Define a user interface matching the backend model
// This matches the User-class in 'ExtendedSpringUser' project in my GitHub
export interface IUser {
  id?: number; // Optional because the id is auto-generated by the database
  name: string;
  email: string;
}

@Injectable({
  providedIn: 'root'
})
export class UserService {
  // Get users from API - match URL to project of choise
  private apiUrl = 'http://localhost:8080/users';

  
  constructor(private http: HttpClient) {}

  // Fetch user data from the API endpoint
  getUsers(): Observable<IUser[]> {
    return this.http.get<IUser[]>(this.apiUrl);
  }

  // Sends a POST request to create a new user on the backend.
  // The newUser object does not require an id, as it will be generated by the database.
  addUser(newUser: Omit<IUser, 'id'>): Observable<IUser> {
    return this.http.post<IUser>(this.apiUrl, newUser);
  }

  // Sends a DELETE request to remove a user by ID on the backend
  deleteUser(id: number): Observable<void> {
    return this.http.delete<void>(`${this.apiUrl}/${id}`);
  }

}
